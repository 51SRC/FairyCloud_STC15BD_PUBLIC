C51 COMPILER V8.02   SMARTCAR                                                              07/26/2020 18:41:13 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE SMARTCAR
OBJECT MODULE PLACED IN ..\hex\SmartCar.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\code\SmartCar.c PRINT(.\SmartCar.lst) TABS(2) OBJECT(..\hex\SmartCar.obj
                    -)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC15F4K60S4 ÏµÁÐ ¶¨Ê±Æ÷1ÓÃ×÷´®¿Ú1µÄ²¨ÌØÂÊ·¢ÉúÆ÷¾ÙÀý------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966-------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.GXWMCU.com --------------------------------------------*/
   9          /* Èç¹ûÒªÔÚ³ÌÐòÖÐÊ¹ÓÃ´Ë´úÂë,ÇëÔÚ³ÌÐòÖÐ×¢Ã÷Ê¹ÓÃÁËSTCµÄ×ÊÁÏ¼°³ÌÐò        */
  10          /* Èç¹ûÒªÔÚÎÄÕÂÖÐÓ¦ÓÃ´Ë´úÂë,ÇëÔÚÎÄÕÂÖÐ×¢Ã÷Ê¹ÓÃÁËSTCµÄ×ÊÁÏ¼°³ÌÐò        */
  11          /*---------------------------------------------------------------------*/
  12          
  13          
  14          
  15          
  16          /* --------------------------- ÖØÒªËµÃ÷ ------------------------------------------------------------------
             --------------*/
  17          
  18          /*--1.Î¢ÐÅ¶©ÔÄºÅÎÄÕÂ¿ÉÄÜ²»ÊÇ×îÐÂµÄ£¬´úÂë²ÅÊÇ×îÐÂµÄ--------------------------------------------------------
             --------------*/
  19          /*--2.ºóÀ´¼ÓÈëÁËÒ»¸öË®±ÃPUMP£¬¶ÔÓÚµÄÒý½ÅÊÇP2^3£¬Äú¿ÉÓÃP2^3Òý½Å½ÓLEDµÆ-------------------------------------
             -------------*/
  20          /*--3.12864ÏÔÊ¾ÆÁµÄÒý½Å¶ÔÓ¦¹ØÏµ //sbit SCL=P4^1; ´®ÐÐÊ±ÖÓ  //sbit SDA=P4^2; ´®ÐÐÊý¾Ý---ÔÚÍ·ÎÄ¼þL112864,HÖÐ
             -ÐÞ¸Ä---------*/
  21          /*--4.µ¥Æ¬»úÆô¶¯£ºµ¥Æ¬»úÆô¶¯==¡·À­È¡·þÎñÆ÷Ê±¼ä==¡·OPENIDÈÏÖ¤==¡·½¨Á¢Á´½Ó==¡·Õý³£Í¨ÐÅ----------------------
             --------------*/
  22          /*--5.±¾´úÂë£¬Çë¸ü»»SRCCIDÎªÄãµÄÉè±¸CID,SRCOPENIDÎªÄãµÄopenid,netConfigÕâÀïÃæ°üº¬ÄãµÄWiFiÃûºÍÃÜÂë---------
             --------------*/
  23          /* --------------------------- QQ:1055417926 -------------------------------------------------------------
             --------------*/
  24          
  25          /* --------------------------- END -----------------------------------------------------------------------
             --------------*/
  26          
  27          
  28          #include "STC15W4K58S4.h"
  29          #include "DHT11.h"
  30          #include "intrins.h"
  31          #include <string.h>  // ×Ö·û´®´¦ÀíÍ·ÎÄ¼þ
  32          
  33          #include "codetab.h"
  34          #include "LQ12864.h"
  35          
  36          sbit PUMP = P3 ^ 2;  // LED
  37          sbit LED = P3 ^ 2;  // LED
  38          //sbit PUMP = P2 ^ 3;  // Ë®±ÃPUMP
  39          sbit Buzzer = P5 ^ 4;  // ·äÃùÆ÷  ¼ÇµÃÓÃÒ»¸öÈý¼«¹ÜÇý¶¯Å¶
  40          //sbit SCL=P4^1; //´®ÐÐÊ±ÖÓ
  41          //sbit SDA=P4^2; //´®ÐÐÊý¾Ý
  42          
  43          bit busy;
  44          
  45          typedef char I8;
  46          typedef int I16;
C51 COMPILER V8.02   SMARTCAR                                                              07/26/2020 18:41:13 PAGE 2   

  47          typedef long I32;
  48          typedef unsigned char U8; 
  49          
  50          U8 SRCHeader = 0x23;
  51          U8 xdata SRCCID[] = {"SRC00000000000004"};//ÄãµÄÉè±¸ID 17Î»
  52          U8 xdata netConfig[] = "AT+CWJAP=\"Gunter\",\"{qwerty123}\"\r\n\0";// ÄãµÄWiFiÃû³ÆºÍÃÜÂë  Ê¾ÀýµÄWiFiÃû³Æ G
             -unter     ÃÜÂë    {qwerty123}
  53          U8 xdata DATA_GET[500]={0};//»º³åÇø³¤¶È
  54          
  55          
  56          U8 xdata SRCOPENID[] = {"627460345c74ffa8d078c98b541fb091"};//ÄãµÄ32Î»µÄopenid£¬¿ÉÔÚÐ¡³ÌÐò¡¶ºÚÀÇ¾«Áé¡·¸öÈË
             -ÖÐÐÄ²é¿´
  57          static    unsigned char   CheckTime = 0;  //ÊÇ·ñÒÑºÍ·þÎñÆ÷Í¬²½Ê±¼ä    ±êÊ¶
  58          static    unsigned char   CheckAuth = 0; //ÊÇ·ñÒÑµÇÂ½ÑéÖ¤   ±êÊ¶
  59          static   unsigned int xdata  Timestamp[6] = {0x00,0x00,0x00,0x00,0x00,0x00};  //ÓÃÀ´±£´æ·þÎñÆ÷µÄÊ±¼äÊý¾Ý
  60          
  61          
  62          
  63          U8 CURRENT_LENGTH=0;
  64          
  65          static   unsigned int   Timer4_Count=1;
  66          static   unsigned int   Timeout_Count=0;
  67          static   unsigned int   DisplayTime_Count=0;
  68          static   unsigned char i;
  69          
  70          #define FOSC 11059200L          //ÏµÍ³ÆµÂÊ
  71          #define BAUD 115200             //´®¿Ú²¨ÌØÂÊ
  72          
  73          #define S1_S0 0x40              //P_SW1.6
  74          #define S1_S1 0x80              //P_SW1.7
  75          
  76          
  77          void DELAY_MS(unsigned int timeout);    //@11.0592MHz   1ms
  78          void DELAY_1MS() ;
  79          void UART_TC (unsigned char *str);
  80          void UART_T (unsigned char UART_data); //¶¨Òå´®¿Ú·¢ËÍÊý¾Ý±äÁ¿
  81          void UART_R();//½ÓÊÜÊý¾Ý
  82          void ConnectServer();//Á¬½Ó·þÎñÆ÷
  83          void ReConnectServer();//ÖØÆôWIFIÁ¬½Ó·þÎñÆ÷
  84          void USART_Init();
  85          void Device_Init();
  86          void SendAckData(U8 len, unsigned char *RES_DATA);
  87          void ConnectSuccess();
  88          void Timer4Init();
  89          unsigned char CheckBCC(unsigned char len, unsigned char *recv);
  90          void ResponseData(unsigned char len,unsigned char *RES_DATA);
  91          void Buzzer_Actions_Status(unsigned char status);
  92          void Led_Actions_Status(unsigned char status);
  93          void Pump_Actions_Status(unsigned char status);//¿ª¹ØË®±Ã
  94          
  95          void Timer0Init(void);
  96          void LEDFunc(unsigned char TEMP,unsigned char HUMI) ;//LEDÏÔÊ¾ÎÂÊª¶È// SCL½ÓP4^1  // SDA½ÓP4^2
  97          
  98          
  99          void main(){
 100   1          P0M0 = 0x00;
 101   1          P0M1 = 0x00;
 102   1          P1M0 = 0x00;
 103   1          P1M1 = 0x00;
 104   1          P2M0 = 0x00;
 105   1          P2M1 = 0x00;
 106   1          P3M0 = 0x00;
C51 COMPILER V8.02   SMARTCAR                                                              07/26/2020 18:41:13 PAGE 3   

 107   1          P3M1 = 0x00;
 108   1          P4M0 = 0x00;
 109   1          P4M1 = 0x00;
 110   1          P5M0 = 0x00;
 111   1          P5M1 = 0x00;
 112   1          P6M0 = 0x00;
 113   1          P6M1 = 0x00;
 114   1          P7M0 = 0x00;
 115   1          P7M1 = 0x00;
 116   1          
 117   1          Device_Init();//³õÊ¼»¯Ó²¼þ
 118   1      
 119   1      
 120   1          OLED_Init(); //OLED³õÊ¼»¯
 121   1          
 122   1          LEDFunc(0,0);
 123   1          OLED_P6x8Str(0,7,"status: Starting    ");//connected closed starting
 124   1      
 125   1      
 126   1          USART_Init();//³õÊ¼»¯ÓëWiFiÍ¨ÐÅµÄ´®¿Ú
 127   1          
 128   1          if(PCON&0x10){  //Èç¹ûÊÇÓ²Æô¶¯(ÉÏµçÆô¶¯)µÄ»°£¬¾Í½øÐÐWiFiµÄµÚÒ»´Î³õÊ¼»¯²Ù×÷£¬ÈôÊÇÈÈÆô¶¯£¨¸´Î»Æô¶¯»ò¿´ÃÅ¹·Æ
             -ô¶¯£©µÄ»°Ö±½ÓÌø¹ý£»ÒòÎªWiFiÔÚµÚÒ»´Î³õÊ¼»¯µÄÊ±ºò£¬¾Í½øÐÐÁË¡° ±£´æTCPÁ¬½Óµ½flash£¬ÊµÏÖÉÏµçÍ¸´«¡±
 129   2            PCON&=0xef;
 130   2            ConnectServer();
 131   2          }
 132   1      
 133   1          
 134   1      
 135   1          ConnectSuccess();
 136   1          
 137   1          Timer4Init();
 138   1          Timer0Init();
 139   1      
 140   1          WDT_CONTR = 0x06;       //¿´ÃÅ¹·¶¨Ê±Æ÷Òç³öÊ±¼ä¼ÆËã¹«Ê½: (12 * 32768 * PS) / FOSC (Ãë)
 141   1                                  //ÉèÖÃ¿´ÃÅ¹·¶¨Ê±Æ÷·ÖÆµÊýÎª32,Òç³öÊ±¼äÈçÏÂ:
 142   1                                  //11.0592M : 1.14s
 143   1                                  //18.432M  : 0.68s
 144   1                                  //20M      : 0.63s
 145   1          WDT_CONTR |= 0x20;      //Æô¶¯¿´ÃÅ¹·  STCµ¥Æ¬»úµÄ¿´ÃÅ¹·Ò»µ©Æô¶¯ºó£¬¾ÍÃ»·¨¹Ø±Õ
 146   1      
 147   1          while(1) {
 148   2            WDT_CONTR |= 0x10;  //Î¹¹·³ÌÐò
 149   2            
 150   2            if(DHT11_Read_Data(&DATA_Temphui[0],&DATA_Temphui[1])==0)//ÎÂÊª¶È¼ì²â
 151   2            {
 152   3              
 153   3                DATA_Temphui[2]=1;   
 154   3                LEDFunc(DATA_Temphui[0],DATA_Temphui[1]);
 155   3      
 156   3            }
 157   2          
 158   2      
 159   2          };
 160   1      }
 161          
 162          void LEDFunc(unsigned char TEMP,unsigned char HUMI) {
 163   1        
 164   1        
 165   1          OLED_P16x16Ch(0,4,16);//Ë®±Ã
 166   1          OLED_P16x16Ch(16,4,17);
 167   1          OLED_P16x16Ch(72,4,18);//À®°È
C51 COMPILER V8.02   SMARTCAR                                                              07/26/2020 18:41:13 PAGE 4   

 168   1          OLED_P16x16Ch(88,4,19);
 169   1          
 170   1        //  OLED_P8x16Str(0,0,"00.00   00:00:00");//ÏÔÊ¾Ê±¼ä
 171   1          
 172   1          
 173   1          
 174   1          OLED_P8x16Char(0,0,'0'+Timestamp[1]/10%10); //ÔÂ
 175   1          OLED_P8x16Char(8,0,'0'+Timestamp[1]%10);    
 176   1          OLED_P8x16Str(16,0,".");
 177   1          
 178   1          OLED_P8x16Char(24,0,'0'+Timestamp[2]/10%10); //ÈÕ
 179   1          OLED_P8x16Char(32,0,'0'+Timestamp[2]%10);   
 180   1          OLED_P8x16Str(40,0,"   ");
 181   1          
 182   1          OLED_P8x16Char(64,0,'0'+Timestamp[3]/10%10); //Ê±
 183   1          OLED_P8x16Char(72,0,'0'+Timestamp[3]%10);   
 184   1          OLED_P8x16Str(80,0,":");
 185   1          
 186   1          OLED_P8x16Char(88,0,'0'+Timestamp[4]/10%10); //·Ö
 187   1          OLED_P8x16Char(96,0,'0'+Timestamp[4]%10);   
 188   1          OLED_P8x16Str(104,0,":");
 189   1          
 190   1          OLED_P8x16Char(112,0,'0'+Timestamp[5]/10%10); //Ãë
 191   1          OLED_P8x16Char(120,0,'0'+Timestamp[5]%10);    
 192   1          
 193   1      
 194   1      
 195   1      
 196   1          OLED_P8x16Str(0,2,"Temp:");
 197   1          OLED_P8x16Str(72,2,"Humi:");
 198   1      
 199   1      
 200   1          OLED_P8x16Char(40,2,'0'+TEMP/10%10);
 201   1          OLED_P8x16Char(48,2,'0'+TEMP%10);   
 202   1          OLED_P8x16Char(112,2,'0'+HUMI/10%10);
 203   1          OLED_P8x16Char(120,2,'0'+HUMI%10);
 204   1      
 205   1      
 206   1          OLED_P8x16Str(32,4,":");
 207   1          OLED_P8x16Str(104,4,":");
 208   1          
 209   1          if(PUMP){//ÏÔÊ¾Ë®±Ã×´Ì¬ ¿ª/¹Ø
 210   2                OLED_P16x16Ch(40,4,24);
 211   2      
 212   2          }else{
 213   2                OLED_P16x16Ch(40,4,25);
 214   2      
 215   2          }
 216   1      
 217   1          if(Buzzer){//ÏÔÊ¾·äÃùÆ÷×´Ì¬ ¿ª/¹Ø
 218   2                OLED_P16x16Ch(112,4,24);
 219   2      
 220   2          }else{
 221   2                OLED_P16x16Ch(112,4,25);
 222   2      
 223   2          }
 224   1          
 225   1              
 226   1          if(CheckTime==0){
 227   2              OLED_P6x8Str(0,7,"status: CheckTime  ");//connected closed starting
 228   2          }else if(CheckAuth==0){
 229   2              OLED_P6x8Str(0,7,"status: CheckAuth  ");//connected closed starting
C51 COMPILER V8.02   SMARTCAR                                                              07/26/2020 18:41:13 PAGE 5   

 230   2          }else{
 231   2              OLED_P6x8Str(0,7,"status: Connected  ");//Connected  Starting
 232   2          }
 233   1              
 234   1      
 235   1        }
 236          
 237          unsigned char CheckBCC(unsigned char len, unsigned char *recv){
 238   1          unsigned char bcc = 0x00;
 239   1          unsigned char i=0;
 240   1          for(i=0;i<len-1;i++)
 241   1          {
 242   2              bcc^=recv[i];
 243   2          };
 244   1          return bcc;
 245   1      
 246   1      }
 247          
 248          void ResponseData(unsigned char len,unsigned char *RES_DATA) {
 249   1        
 250   1        if(len <26){
 251   2          return ;
 252   2        }
 253   1      
 254   1      
 255   1      //Ð£ÑéºÍ
 256   1        if(CheckBCC(len, RES_DATA) == RES_DATA[len-1]){
 257   2        
 258   2           unsigned int dataCmdFlag =(RES_DATA[2] << 8) | RES_DATA[3];         //ÃüÁî±êÊ¶
 259   2           unsigned char dataCmdAck = RES_DATA[4];          //Ó¦´ð±êÊ¶
 260   2           unsigned char j=0;
 261   2           unsigned char dataEncryptFlag = RES_DATA[22];    //¼ÓÃÜ·½Ê½
 262   2           unsigned char dataUintLength = (RES_DATA[23] << 8) | RES_DATA[24];  //Êý¾Ý³¤¶È
 263   2      
 264   2         //Ð£ÑéCIDÊÇ·ñÕýÈ·
 265   2           for(j=5;j<22;j++){
 266   3              if(SRCCID[j-5] != RES_DATA[j]){
 267   4               return;
 268   4             }
 269   3           }
 270   2          
 271   2           //Ð£Ñé³¤¶ÈÊÇ·ñÕýÈ·
 272   2           if ((26 + dataUintLength) != len) {
 273   3              return ;
 274   3           }
 275   2           
 276   2           Timeout_Count = 0;//½«±¾µØµÄ30sÖØÁ¬¼ÆÊýÇåÁã
 277   2           
 278   2      
 279   2           
 280   2           if(dataCmdFlag == 0x8001){//Á¬½ÓÈÏÖ¤
 281   3              if(RES_DATA[31] == 0x7E){//Í¬²½Ê±¼ä½á¹û
 282   4                unsigned char j=0;
 283   4                 for(j=0;j<6;j++){
 284   5                  Timestamp[j] = RES_DATA[j+32];
 285   5               }
 286   4                 
 287   4                 Timestamp[0] = Timestamp[0] ;
 288   4                 CheckTime = 1;
 289   4           
 290   4              }else  if(RES_DATA[31] == 0x01){//Á¬½ÓÈÏÖ¤½á¹û
 291   4                 
C51 COMPILER V8.02   SMARTCAR                                                              07/26/2020 18:41:13 PAGE 6   

 292   4                 CheckAuth = 1;
 293   4              }
 294   3             
 295   3             
 296   3           }else if(dataCmdFlag ==0x8002){//ÊµÊ±ÐÅÏ¢Ö÷¶¯ÉÏ±¨
 297   3             
 298   3           }else if(dataCmdFlag ==0x8003){//²¹·¢
 299   3             
 300   3           }else if(dataCmdFlag ==0x8004){//Éè±¸µÇ³ö
 301   3             
 302   3           }else if(dataCmdFlag ==0x8005){//ÐÄÌø
 303   3             
 304   3           }else if(dataCmdFlag ==0x8006){//Ô¶³Ì¿ØÖÆ
 305   3      
 306   3             if(RES_DATA[31] == 0x02){//»ù´¡Êý¾Ý²éÑ¯  ÎÂ¶È¡¢Êª¶È¡¢µÆ¡¢À®°È£»Çë¼û¡¾ÐÅÏ¢Ìå¶¨Òå¡¿
 307   4                unsigned char  light_status = PUMP ? 0x02 : 0x01;
 308   4                unsigned char buzzy_status = Buzzer ? 0x02 : 0x01;
 309   4                unsigned char xdata ds[37] = {0};
 310   4                unsigned char dslen =37;
 311   4                unsigned char j=0;
 312   4              
 313   4                ds[0] = 0X23;//Êý¾ÝÍ·
 314   4                ds[1] = 0X23;
 315   4                ds[2] = 0X10;//ÃüÁî±êÊ¶  ÏÂ·¢0x8006  ¶ÔÓÚµÄÉÏ´«ÊÇ0x1006
 316   4                ds[3] = 0X06;
 317   4                
 318   4                if(dataCmdAck == 0xFE){//Ó¦´ð±êÊ¶
 319   5                  ds[4] = 0x01;//³É¹¦
 320   5                  
 321   5                }
 322   4            
 323   4               for(j=0;j<17;j++){//CID¸³Öµ
 324   5                  ds[j+5] = SRCCID[j];
 325   5               }
 326   4              ds[22] = 0X01;//²»¼ÓÃÜ
 327   4              ds[23] = 0X00;//³¤¶ÈÁ½Î» ¸ßÎ»00
 328   4              ds[24] = 0X0B;//µÍÎ»0B Ò»¹²11Î»
 329   4      
 330   4              ds[25] = Timestamp[0];//Äê 0x14+2000 = 2020 
 331   4              ds[26] = Timestamp[1];//ÔÂ 
 332   4              ds[27] = Timestamp[2];//ÈÕ 
 333   4              ds[28] = Timestamp[3];//Ê± 
 334   4              ds[29] = Timestamp[4];//·Ö
 335   4              ds[30] = Timestamp[5];//Ãë
 336   4              
 337   4              ds[31] = 0X02;//»ù´¡²éÑ¯   ±àÂë
 338   4      
 339   4      
 340   4                ds[32] = DATA_Temphui[0]; //»ù´¡Êý¾Ý4¸ö×Ö½ÚµÄÊý¾Ý
 341   4                ds[33] = DATA_Temphui[1];
 342   4                ds[34] = light_status;
 343   4                ds[35] = buzzy_status;
 344   4                
 345   4            
 346   4                
 347   4               ds[dslen-1] = CheckBCC(dslen, ds);//¼ÆËãÐ£ÑéºÍ  ·Å×îºóÒ»Î»
 348   4                  SendAckData(dslen,ds);
 349   4      
 350   4               
 351   4               
 352   4             }else if(RES_DATA[31] == 0x03){//»ù´¡¿ØÖÆ  µÆ¡¢À®°È£»Çë¼û¡¾ÐÅÏ¢Ìå¶¨Òå¡¿
 353   4                     
C51 COMPILER V8.02   SMARTCAR                                                              07/26/2020 18:41:13 PAGE 7   

 354   4                 unsigned char pump = RES_DATA[32];
 355   4                 unsigned char buzzy = RES_DATA[33];
 356   4             
 357   4                 if( pump==0x02){
 358   5                    Pump_Actions_Status(0);
 359   5                  }else if( pump==0x01){
 360   5                    Pump_Actions_Status(1);
 361   5                  }
 362   4                 
 363   4                 if( buzzy==0x02){
 364   5                    Buzzer_Actions_Status(0);
 365   5                 }else if( buzzy==0x01){
 366   5                    Buzzer_Actions_Status(1);
 367   5                 }
 368   4                 
 369   4                 
 370   4                 
 371   4                 
 372   4                RES_DATA[0] = 0X23;
 373   4                RES_DATA[1] = 0X23;
 374   4                RES_DATA[2] = 0X10;
 375   4                RES_DATA[3] = 0X06;
 376   4      
 377   4                if(dataCmdAck == 0xFE){
 378   5                  RES_DATA[4] = 0x01;//³É¹¦
 379   5                
 380   5                }
 381   4                if(dataCmdAck == 0xFE){//Ó¦´ð±êÊ¶
 382   5                  RES_DATA[4] = 0x01;//³É¹¦
 383   5                  
 384   5                }
 385   4            
 386   4               for(j=0;j<17;j++){//CID¸³Öµ
 387   5                  RES_DATA[j+5] = SRCCID[j];
 388   5               }
 389   4              RES_DATA[22] = 0X01;//²»¼ÓÃÜ
 390   4              RES_DATA[23] = 0X00;//³¤¶ÈÁ½Î» ¸ßÎ»00
 391   4              RES_DATA[24] = 0X09;//µÍÎ»09 Ò»¹²9Î»    6Î»µÄÊ±¼ä+1Î»µÄÃüÁî±êÊ¶ + 2Î»µÄÊý¾Ý
 392   4      
 393   4              RES_DATA[25] = Timestamp[0];//Äê 0x14+2000 = 2020 
 394   4              RES_DATA[26] = Timestamp[1];//ÔÂ 
 395   4              RES_DATA[27] = Timestamp[2];//ÈÕ 
 396   4              RES_DATA[28] = Timestamp[3];//Ê± 
 397   4              RES_DATA[29] = Timestamp[4];//·Ö
 398   4              RES_DATA[30] = Timestamp[5];//Ãë
 399   4              
 400   4              RES_DATA[31] = 0X03;//»ù´¡¿ØÖÆ  µÆ¡¢À®°È£»Çë¼û¡¾ÐÅÏ¢Ìå¶¨Òå¡¿
 401   4              
 402   4      //        RES_DATA[32] = RES_DATA[32];// ÕâÁ½Î»²»ÓÃ¸Ä¶¯  
 403   4      //        RES_DATA[33] = RES_DATA[33];
 404   4              
 405   4              
 406   4                  RES_DATA[len-1] = CheckBCC(len, RES_DATA);//ÕâÒ»Ö¡Êý¾Ý 35¸ö×Ö½Ú len=35
 407   4                  SendAckData(len,RES_DATA);
 408   4      
 409   4             
 410   4             }else if(RES_DATA[31] == 0x7F){//ÖØÆô
 411   4                IAP_CONTR = 0X20;
 412   4             }
 413   3             
 414   3             
 415   3             
C51 COMPILER V8.02   SMARTCAR                                                              07/26/2020 18:41:13 PAGE 8   

 416   3           }
 417   2           
 418   2          //Ë¢ÐÂÒ»ÏÂLEDÆÁÄ»
 419   2          LEDFunc(DATA_Temphui[0],DATA_Temphui[1]);
 420   2        }
 421   1        
 422   1        
 423   1        
 424   1      }
 425          
 426          
 427          
 428          void DELAY_1MS() {
 429   1          unsigned char i, j;
 430   1      
 431   1          _nop_();
 432   1          _nop_();
 433   1          _nop_();
 434   1          i = 11;
 435   1          j = 190;
 436   1          do
 437   1          {
 438   2              while (--j);
 439   2          } while (--i);
 440   1      
 441   1      
 442   1      }
 443          
 444          void DELAY_MS(unsigned int timeout)   //@11.0592MHz
 445          {
 446   1          int t = 0;
 447   1          while (t < timeout)
 448   1          {
 449   2              t++;
 450   2              DELAY_1MS();
 451   2          }
 452   1      }
 453          
 454          
 455          
 456          //³õÊ¼»¯LEDºÍ·äÃùÆ÷
 457          void Device_Init() {
 458   1      
 459   1          LED = 0;
 460   1          Buzzer = 0;
 461   1          PUMP = 0;
 462   1      }
 463          
 464          //³õÊ¼»¯Íê³ÉµÎµÎÁ½Éù
 465          void ConnectSuccess(){
 466   1      
 467   1         LED = 1;
 468   1        // Buzzer = 1;
 469   1         DELAY_MS(200);
 470   1          LED = 0;
 471   1        //  Buzzer = 0;
 472   1         DELAY_MS(200);
 473   1          LED = 1;
 474   1        //  Buzzer = 1;
 475   1         DELAY_MS(200);
 476   1          LED = 0;
 477   1        //  Buzzer = 0;
C51 COMPILER V8.02   SMARTCAR                                                              07/26/2020 18:41:13 PAGE 9   

 478   1      
 479   1      }
 480          
 481          
 482          void USART_Init()
 483          {
 484   1      
 485   1      //   ACC = P_SW1;
 486   1      //    ACC &= ~(S1_S0 | S1_S1);    //S1_S0=0 S1_S1=0
 487   1      //    P_SW1 = ACC;                //(P3.0/RxD, P3.1/TxD)
 488   1      
 489   1          ACC = P_SW1;
 490   1          ACC &= ~(S1_S0 | S1_S1);    //S1_S0=1 S1_S1=0
 491   1          ACC |= S1_S0;               //(P3.6/RxD_2, P3.7/TxD_2)
 492   1          P_SW1 = ACC;
 493   1          SCON = 0x50;                //8Î»¿É±ä²¨ÌØÂÊ
 494   1          PS = 1;
 495   1          
 496   1      //  ACC = P_SW1;
 497   1      //  ACC &= ~(S1_S0 | S1_S1);    //S1_S0=0 S1_S1=1
 498   1      //  ACC |= S1_S1;               //(P1.6/RxD_3, P1.7/TxD_3)
 499   1      //  P_SW1 = ACC;
 500   1      
 501   1      
 502   1          AUXR = 0x40;                //¶¨Ê±Æ÷1Îª1TÄ£Ê½
 503   1          TMOD = 0x00;                //¶¨Ê±Æ÷1ÎªÄ£Ê½0(16Î»×Ô¶¯ÖØÔØ)
 504   1          TL1 = (65536 - (FOSC/4/BAUD));   //ÉèÖÃ²¨ÌØÂÊÖØ×°Öµ
 505   1          TH1 = (65536 - (FOSC/4/BAUD))>>8;
 506   1          TR1 = 1;                    //¶¨Ê±Æ÷1¿ªÊ¼Æô¶¯
 507   1          ES = 1;                     //Ê¹ÄÜ´®¿ÚÖÐ¶Ï
 508   1          EA = 1;
 509   1      
 510   1      }
 511          
 512          /*----------------------------
 513          UART ÖÐ¶Ï·þÎñ³ÌÐò
 514          -----------------------------*/
 515          void Uart() interrupt 4 using 1
 516          {
 517   1          if (RI)
 518   1          {
 519   2              while(!RI);
 520   2              RI=0;
 521   2              UART_R();
 522   2              busy = 0;
 523   2      
 524   2          }
 525   1          if (TI)
 526   1          {
 527   2              while(!TI);
 528   2              TI = 0;                 //Çå³ýTIÎ»
 529   2              busy = 0;               //ÇåÃ¦±êÖ¾
 530   2          }
 531   1      }
 532          
 533          
 534          void UART_T (unsigned char UART_data) { //¶¨Òå´®¿Ú·¢ËÍÊý¾Ý±äÁ¿
 535   1          SBUF = UART_data; //½«½ÓÊÕµÄÊý¾Ý·¢ËÍ»ØÈ¥
 536   1          while(!TI);   //¼ì²é·¢ËÍÖÐ¶Ï±êÖ¾Î»
 537   1          TI = 0;     //Áî·¢ËÍÖÐ¶Ï±êÖ¾Î»Îª0£¨Èí¼þÇåÁã£©
 538   1      }
 539          
C51 COMPILER V8.02   SMARTCAR                                                              07/26/2020 18:41:13 PAGE 10  

 540          
 541          void UART_TC (unsigned char *str) {
 542   1          while(*str != '\0') {
 543   2              UART_T(*str);
 544   2              *str++;
*** WARNING C275 IN LINE 544 OF ..\CODE\SMARTCAR.C: expression with possibly no effect
 545   2          }
 546   1          *str = 0;
 547   1      }
 548          
 549          
 550          //´®¿Ú  ½ÓÊÕESP8266µÄ´®¿ÚÊý¾Ý£¬²¢Ð£ÑéÊý¾ÝµÄÍêÕûÐÔ9Î»
 551          
 552          void UART_R()
 553          {
 554   1          TL0 = 0x00;   //ÉèÖÃ¶¨Ê±³õÖµ
 555   1        TH0 = 0xDC;   //ÉèÖÃ¶¨Ê±³õÖµ
 556   1        TF0 = 0;    //Çå³ýTF0±êÖ¾
 557   1        TR0 = 1;    //¶¨Ê±Æ÷0¿ªÊ¼¼ÆÊ±
 558   1        ET0 = 1;  //ÔÊÐíÖÐ¶Ï
 559   1        
 560   1        
 561   1      
 562   1         DATA_GET[CURRENT_LENGTH]=SBUF;
 563   1         CURRENT_LENGTH++;
 564   1        
 565   1        
 566   1      
 567   1      }
 568          
 569          
 570          
 571          void SendAckData(U8 len, unsigned char *RES_DATA) {
 572   1        
 573   1          unsigned int i=0;
 574   1          for(i=0; i<len; i++)
 575   1          {
 576   2               
 577   2              SBUF=RES_DATA[i];
 578   2              while(!TI);   //¼ì²é·¢ËÍÖÐ¶Ï±êÖ¾Î»
 579   2                TI = 0; 
 580   2          }
 581   1      }
 582          
 583          //ÖØÆô ESP8266WiFiÄ£¿é
 584          void ReConnectServer() {
 585   1      
 586   1          UART_TC("+++\0"); // ÍË³öÍ¸´«Ä£Ê½
 587   1           DELAY_MS( 1000);
 588   1          UART_TC("AT+RST\r\n\0");  // ¸´Î»
 589   1          
 590   1      
 591   1          
 592   1      }
 593          
 594          //³õÊ¼»¯ESP8266WiFiÄ£¿é£¬²¢Á¬½Óµ½·þÎñÆ÷
 595          void ConnectServer() {
 596   1      
 597   1          DELAY_MS( 1000);
 598   1      
 599   1          UART_TC("+++\0"); // ÍË³öÍ¸´«Ä£Ê½
 600   1          DELAY_MS( 1000);
C51 COMPILER V8.02   SMARTCAR                                                              07/26/2020 18:41:13 PAGE 11  

 601   1          
 602   1          UART_TC("AT+CWMODE=1\r\n\0"); // ÕâÊÇÉèÖÃSTAÄ£Ê½
 603   1          DELAY_MS( 2500);
 604   1          
 605   1          UART_TC("AT+CIPMUX=0\r\n\0");  // ÉèÖÃµ¥Á¬½ÓÄ£Ê½
 606   1          DELAY_MS(1000);
 607   1      
 608   1          UART_TC(netConfig);  // ÕâÒ»²½±ãÊÇÁ¬½Ówifi£¬ÑÓÊ±µÄÊ±¼äÒª³¤Ò»Ð©£¬·ñÔò»áµÈ²»µ½·µ»ØµÄÐÅÏ¢¡£10s
 609   1          DELAY_MS(15000);
 610   1      
 611   1      
 612   1          UART_TC("AT+CIPSTART=\"TCP\",\"47.104.19.111\",4001\r\n\0");  // Á¬½Óµ½Ö¸¶¨TCP·þÎñÆ÷47.104.19.111
 613   1          DELAY_MS( 5000);
 614   1      
 615   1          UART_TC("AT+CIPMODE=1\r\n\0"); // ÉèÖÃÍ¸´«Ä£Ê½
 616   1          DELAY_MS( 2000);
 617   1      
 618   1         UART_TC("AT+SAVETRANSLINK=1,\"47.104.19.111\",4001,\"TCP\"\r\n\0"); // ±£´æTCPÁ¬½Óµ½flash£¬ÊµÏÖÉÏµçÍ¸´«
 619   1         DELAY_MS(1000);
 620   1      
 621   1          UART_TC("AT+CIPSEND\r\n\0");   // ½øÈëÍ¸´«Ä£Ê½ ×¼±¸Ä£¿éÓëµçÄÔ½øÐÐ»¥´«Êý¾Ý
 622   1          DELAY_MS( 1000);
 623   1          
 624   1          
 625   1      
 626   1      }
 627          
 628          void Timer4Init(void)   
 629          {
 630   1        //50 ºÁÃë@11.0592MHz
 631   1        T4T3M &= 0xDF;    //¶¨Ê±Æ÷Ê±ÖÓ12TÄ£Ê½
 632   1        T4L = 0x00;   //ÉèÖÃ¶¨Ê±³õÖµ
 633   1        T4H = 0x4C;   //ÉèÖÃ¶¨Ê±³õÖµ
 634   1        T4T3M |= 0x80;    //¶¨Ê±Æ÷4¿ªÊ¼¼ÆÊ±
 635   1        
 636   1          IE2 |= 0x40;    //¿ª¶¨Ê±Æ÷4ÖÐ¶Ï
 637   1          EA=1;   //×ÜÖÐ¶Ï¿ªÆô
 638   1      }
 639          
 640          
 641          //10sÖÐ¶Ï×Ô¶¯ÉÏ±¨ÐÅÏ¢
 642          void Timer4_interrupt() interrupt 20    //¶¨Ê±ÖÐ¶ÏÈë¿Ú
 643          {
 644   1        
 645   1      
 646   1        
 647   1        if(DisplayTime_Count>=20){  //20 * 50ms = 1s
 648   2          DisplayTime_Count = 0;
 649   2          
 650   2          if(CheckTime==1){  //ÒÑ¾­Í¬²½¹ý·þÎñÆ÷Ê±¼äºó
 651   3            
 652   3            Timestamp[5] =  Timestamp[5] + 1;//Ãë
 653   3            
 654   3            if(Timestamp[5]>=60){
 655   4              Timestamp[5] = 0;
 656   4              Timestamp[4] = Timestamp[4] + 1;//·Ö
 657   4              
 658   4              if(Timestamp[4]>=60){
 659   5                Timestamp[4] = 0;
 660   5                Timestamp[3] = Timestamp[3] + 1;//Ð¡Ê±
 661   5                
 662   5                if(Timestamp[3]>=24){
C51 COMPILER V8.02   SMARTCAR                                                              07/26/2020 18:41:13 PAGE 12  

 663   6                  Timestamp[3] = 0;
 664   6                  Timestamp[2] = Timestamp[2] + 1;//Ìì
 665   6                  
 666   6                  if( ((Timestamp[1] == 4 || Timestamp[1] == 6 || Timestamp[1] == 9 || Timestamp[1] == 11) && Timestam
             -p[2]>=30) || ((Timestamp[1] == 1 || Timestamp[1] == 3 || Timestamp[1] == 5 || Timestamp[1] == 7 || Timestamp[1] == 8 || 
             -Timestamp[1] == 10 || Timestamp[1] == 12) && Timestamp[2]>=31) || ((((Timestamp[0] % 4 == 0 && Timestamp[0] % 100 != 0) 
             -|| Timestamp[0] % 400 == 0) == 1  && Timestamp[2]>=29 ) ||  (((Timestamp[0] % 4 == 0 && Timestamp[0] % 100 != 0) || Time
             -stamp[0] % 400 == 0) == 1  && Timestamp[2]>=28) ) ){
 667   7                    Timestamp[2] = 1;
 668   7                    Timestamp[1] = Timestamp[1] + 1;//ÔÂ
 669   7                    
 670   7                    if(Timestamp[1]>=13){
 671   8                      Timestamp[1] = 1;
 672   8                      Timestamp[0] = Timestamp[0] + 1;//Äê
 673   8                     }
 674   7                    
 675   7                   }
 676   6                  
 677   6                }
 678   5                
 679   5              } 
 680   4              
 681   4             }
 682   3            
 683   3            }
 684   2          
 685   2          
 686   2          
 687   2              if(CheckTime==0){//Éè±¸Í¬²½Ê±¼ä
 688   3                
 689   3                    unsigned char j=0;
 690   3                    U8 xdata RES_DATA[65]= {0};
 691   3                    unsigned char RES_LEN= 65;
 692   3                    
 693   3                    RES_DATA[0] = 0X23;//Êý¾ÝÍ·
 694   3                    RES_DATA[1] = 0X23;
 695   3                    RES_DATA[2] = 0X10;//ÃüÁî±êÊ¶  ÏÂ·¢0x8006  ¶ÔÓÚµÄÉÏ´«ÊÇ0x1006
 696   3                    RES_DATA[3] = 0X01;
 697   3                    RES_DATA[4] = 0xFE;//Ó¦´ð±êÊ¶
 698   3                      
 699   3                   for(j=0;j<17;j++){//CID¸³Öµ
 700   4                      RES_DATA[j+5] = SRCCID[j];
 701   4                   }
 702   3                   
 703   3                  RES_DATA[22] = 0X01;//²»¼ÓÃÜ
 704   3                  RES_DATA[23] = 0X00;//³¤¶ÈÁ½Î» ¸ßÎ»00
 705   3                  RES_DATA[24] = 0X27;//µÍÎ»0x27 
 706   3      
 707   3                  for(j=0;j<6;j++){//Timestamp
 708   4                      RES_DATA[j+25] = Timestamp[j];
 709   4                   }
 710   3                
 711   3                  
 712   3                  RES_DATA[31] = 0X7E;//Í¬²½Ê±¼ä
 713   3      
 714   3                  for(j=0;j<32;j++){//openid
 715   4                      RES_DATA[j+32] = SRCOPENID[j];
 716   4                   }
 717   3                
 718   3                RES_DATA[RES_LEN-1] = CheckBCC(RES_LEN, RES_DATA);
 719   3                              
 720   3                SendAckData(RES_LEN,RES_DATA);
C51 COMPILER V8.02   SMARTCAR                                                              07/26/2020 18:41:13 PAGE 13  

 721   3                
 722   3              
 723   3              } else if( CheckAuth ==0 ){//Éè±¸µÇÂ½ÈÏÖ¤
 724   3                
 725   3                  unsigned char j=0;
 726   3                    U8 xdata RES_DATA[65]= {0};
 727   3                    unsigned char RES_LEN= 65;
 728   3                    
 729   3                    RES_DATA[0] = 0X23;//Êý¾ÝÍ·
 730   3                    RES_DATA[1] = 0X23;
 731   3                    RES_DATA[2] = 0X10;//ÃüÁî±êÊ¶  ÏÂ·¢0x8006  ¶ÔÓÚµÄÉÏ´«ÊÇ0x1006
 732   3                    RES_DATA[3] = 0X01;
 733   3                    RES_DATA[4] = 0xFE;//Ó¦´ð±êÊ¶
 734   3                      
 735   3                   for(j=0;j<17;j++){//CID¸³Öµ
 736   4                      RES_DATA[j+5] = SRCCID[j];
 737   4                   }
 738   3                   
 739   3                  RES_DATA[22] = 0X01;//²»¼ÓÃÜ
 740   3                  RES_DATA[23] = 0X00;//³¤¶ÈÁ½Î» ¸ßÎ»00
 741   3                  RES_DATA[24] = 0X27;//µÍÎ»0x27 
 742   3      
 743   3                  for(j=0;j<6;j++){//Timestamp
 744   4                      RES_DATA[j+25] = Timestamp[j];
 745   4                   }
 746   3                
 747   3                  
 748   3                  RES_DATA[31] = 0X01;//µÇÂ½ÈÏÖ¤
 749   3      
 750   3                  for(j=0;j<32;j++){//openid
 751   4                      RES_DATA[j+32] = SRCOPENID[j];
 752   4                   }
 753   3                
 754   3                RES_DATA[RES_LEN-1] = CheckBCC(RES_LEN, RES_DATA);
 755   3                              
 756   3                SendAckData(RES_LEN,RES_DATA);
 757   3                
 758   3                
 759   3              }else {
 760   3                
 761   3                
 762   3              }
 763   2      
 764   2          
 765   2          
 766   2          
 767   2        }else{
 768   2           DisplayTime_Count++;//Ã¿¼ÓÒ»´Î¼Ó50ms
 769   2        }
 770   1        
 771   1      
 772   1            
 773   1            
 774   1              if(Timer4_Count>=200){  //200 * 50ms = 10s
 775   2                    unsigned char j=0;
 776   2                    U8 xdata RES_DATA[37]= {0};
 777   2                    unsigned char RES_LEN= 37;
 778   2                    unsigned char  light_status = PUMP ? 0x02 : 0x01;
 779   2                    unsigned char buzzy_status = Buzzer ? 0x02 : 0x01;
 780   2                    Timer4_Count = 0;
 781   2        
 782   2                    RES_DATA[0] = 0X23;//Êý¾ÝÍ·
C51 COMPILER V8.02   SMARTCAR                                                              07/26/2020 18:41:13 PAGE 14  

 783   2                    RES_DATA[1] = 0X23;
 784   2                    RES_DATA[2] = 0X10;//ÃüÁî±êÊ¶  ÏÂ·¢0x8006  ¶ÔÓÚµÄÉÏ´«ÊÇ0x1006
 785   2                    RES_DATA[3] = 0X06;
 786   2                    RES_DATA[4] = 0xFE;//Ó¦´ð±êÊ¶
 787   2                      
 788   2                   for(j=0;j<17;j++){//CID¸³Öµ
 789   3                      RES_DATA[j+5] = SRCCID[j];
 790   3                   }
 791   2                   
 792   2                  RES_DATA[22] = 0X01;//²»¼ÓÃÜ
 793   2                  RES_DATA[23] = 0X00;//³¤¶ÈÁ½Î» ¸ßÎ»00
 794   2                  RES_DATA[24] = 0X0B;//µÍÎ»0B Ò»¹²11Î»
 795   2      
 796   2                  RES_DATA[25] = Timestamp[0];//Äê 0x14+2000 = 2020 
 797   2                  RES_DATA[26] = Timestamp[1];//ÔÂ 
 798   2                  RES_DATA[27] = Timestamp[2];//ÈÕ 
 799   2                  RES_DATA[28] = Timestamp[3];//Ê± 
 800   2                  RES_DATA[29] = Timestamp[4];//·Ö
 801   2                  RES_DATA[30] = Timestamp[5];//Ãë
 802   2                  
 803   2                  RES_DATA[31] = 0X02;//»ù´¡Êý¾ÝÉÏ±¨
 804   2      
 805   2                RES_DATA[32] = DATA_Temphui[0];
 806   2                RES_DATA[33] =  DATA_Temphui[1];
 807   2                RES_DATA[34] = light_status;
 808   2                RES_DATA[35] = buzzy_status,
 809   2                RES_DATA[RES_LEN-1] = CheckBCC(RES_LEN, RES_DATA);
 810   2                    
 811   2                Timeout_Count++;//Ã¿¼ÓÒ»´Î¼Ó10s
 812   2                
 813   2                if(Timeout_Count < 3 && CheckTime==1 && CheckAuth ==1){ //Ã»ÓÐÈÏÖ¤³É¹¦·¢ÁË·þÎñÆ÷Ò²»á¾Ü¾ø
 814   3                  
 815   3                  SendAckData(RES_LEN,RES_DATA);
 816   3              }else if(Timeout_Count >= 3){//30s»¹ÊÇÊÕ²»µ½·þÎñÆ÷·µ»ØµÄÊý¾Ý£¬Ôò ÖØÆô»úÆ÷
 817   3                  
 818   3                  ReConnectServer();
 819   3                  Timeout_Count = 0;
 820   3                  
 821   3                      //ÖØÐÂÈÏÖ¤
 822   3                      CheckTime = 0;
 823   3                      CheckAuth = 0;
 824   3                    OLED_P6x8Str(0,7,"status: Closed    ");//Connected closed starting
 825   3      
 826   3                }
 827   2                
 828   2              }else{
 829   2                
 830   2                  Timer4_Count++;
 831   2              }
 832   1              
 833   1      
 834   1          
 835   1      }
 836          
 837          
 838          
 839          
 840          
 841          void Timer0Init(void)   //10ºÁÃë@11.0592MHz
 842          {
 843   1        AUXR &= 0x7F;   //¶¨Ê±Æ÷Ê±ÖÓ12TÄ£Ê½
 844   1        TMOD &= 0xF0;   //ÉèÖÃ¶¨Ê±Æ÷Ä£Ê½
C51 COMPILER V8.02   SMARTCAR                                                              07/26/2020 18:41:13 PAGE 15  

 845   1        TMOD |= 0x01;   //ÉèÖÃ¶¨Ê±Æ÷Ä£Ê½
 846   1        TL0 = 0x00;   //ÉèÖÃ¶¨Ê±³õÖµ
 847   1        TH0 = 0xB8;   //ÉèÖÃ¶¨Ê±³õÖµ
 848   1        TF0 = 0;    //Çå³ýTF0±êÖ¾
 849   1        TR0 = 1;    //¶¨Ê±Æ÷0¿ªÊ¼¼ÆÊ±
 850   1        ET0 = 1;  //ÔÊÐíÖÐ¶Ï
 851   1      }
 852          
 853          
 854          
 855          /********************* Timer0ÖÐ¶Ïº¯Êý************************/
 856          void timer0_int (void) interrupt 1
 857          {
 858   1        TL0 = 0x00;   //ÉèÖÃ¶¨Ê±³õÖµ
 859   1        TH0 = 0xB8;   //ÉèÖÃ¶¨Ê±³õÖµ
 860   1        TF0 = 0;    //Çå³ýTF0±êÖ¾
 861   1        TR0 = 0;    //¶¨Ê±Æ÷0¿ªÊ¼¼ÆÊ±
 862   1        ET0 = 0;  //ÔÊÐíÖÐ¶Ï
 863   1        
 864   1        ResponseData(CURRENT_LENGTH,DATA_GET);    
 865   1        CURRENT_LENGTH = 0;
 866   1            
 867   1      }
 868          
 869          
 870          
 871          void Pump_Actions_Status(unsigned char status){
 872   1      
 873   1        if(status){
 874   2          PUMP = 0;
 875   2        }else{
 876   2          PUMP = 1;
 877   2        }
 878   1      
 879   1      }
 880          
 881          void Led_Actions_Status(unsigned char status){
 882   1      
 883   1        if(status){
 884   2          LED = 0;
 885   2        }else{
 886   2          LED = 1;
 887   2        }
 888   1      
 889   1      }
 890          
 891          void Buzzer_Actions_Status(unsigned char status){
 892   1      
 893   1        if(status){
 894   2          Buzzer = 0;
 895   2        }else{
 896   2          Buzzer = 1;
 897   2        }
 898   1      
 899   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   4518    ----
   CONSTANT SIZE    =   3586    ----
   XDATA SIZE       =    598     204
   PDATA SIZE       =   ----    ----
C51 COMPILER V8.02   SMARTCAR                                                              07/26/2020 18:41:13 PAGE 16  

   DATA SIZE        =     11      61
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
